Responda às perguntas a seguir, antes de nossa aula ao vivo, para ter certeza de que você entendeu os textos. Discuta a resposta com o restante da turma (que tal uma pessoa abrir uma conversa no Slack para conversarem a respeito?!). Se bater alguma dúvida, volte aos textos!

1 - O que é um código que é executado de modo assíncrono? Qual é a diferença disso para um código que é executado de modo síncrono?
R.: É um código que executará uma função em segundo plano, o que possibilita a execução de funções subsequentes. O código síncrono esperará o código anterior ser executado para então dar início a sua execução, no código assíncrono essa espera não é necessária.

2 - Quando você tem que enfileirar várias callbacks, que problema surge? 
R.: O código fica confuso e pouco legível.

3 - Por que as Promises são uma forma de se resolver esse problema?
R.: As promises são funções assíncronas e possuem funcionalidades que permitem gerenciar o fluxo assíncrono dessa função. Elas são construídas de modo a tornar o código mais elegível e compreensível.

4 - Quando você vai se comunicar com uma API, tal comunicação deve ser síncrona ou assíncrona? Lembre-se de que o serviço ao qual você está se conectando pode demorar muito ou pouco para dar retorno, pode estar fora do ar etc.
R.: Deve ser realizada de modo assíncrono porque nós faremos uma requisição através do código da API de seus dados à um servidor. Essa requisição pode demorar, pode ser bem sucedida ou mal sucedida, e portanto devemos realizar de modo assíncrono. 

5 - Dada a resposta anterior, o que é fetch e para que ele serve?
R.: O fetch é utilizado para realizar a requisição dos dados dessa API. Ele tem funcionalidades que tratam os dados recebidos, devolvem os dados recebidos ou tratam os erros relacionados à requisição.
